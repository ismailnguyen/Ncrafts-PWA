{
    "days": [{
            "day": 1,
            "date": "15/05/2019",
            "title": "Workshops",
            "location": "LeBoncoin office",
            "address": "85 rue du Faubourg Saint-Martin – 75010 Paris",
            "rooms": [{
                    "room": "Room #1",
                    "events": [{
                        "type": "conference",
                        "speakerPhoto": "http://ncrafts.io/assets/img/speakers/MathiasVerraes.jpg",
                        "time": "9:00 - 17:00",
                        "title": "DDD Modelling vs Implementation",
                        "description": "The design patterns from Domain-Driven Design are gradually entering the collective consciousness of software developers. But most of the information out there focuses on mechanistic implementation details of the patterns: how to make an Entity in [insert favourite programming language], how to use the Repository pattern with [insert new hot ORM], how to make immutable Value Objects in [insert legacy framework]...<br><br>Applied individually, these patterns are useful, but are not giving you the full potential of Domain-Driven Design.<br><br>This one day training has a different approach. We address technical concerns in implementing the DDD patterns, but the focus is on the underlying principles and heuristics for building great domain-centric object-oriented code.<br><br><ul><li>* Why you’re underusing Value Objects</li><li>* Seeing objects as containers of lifecycles and consistency</li><li>* Discovering deeper domain concepts such as business rules, and lifting them into first class domain objects</li><li>* The relevance of processes, behaviour, temporal modelling... for finding better Aggregate boundaries</li><li>* How mutable software designs have distorted our perception of mutability in the domain</li><li>* Better heuristics for understanding a complex domain, and using them to drive a more focused design</li><li>* Reducing our dependance on service classes</li><li>* Designing an implementation model that not only encapsulates the domain, but communicates that design to future programmers and reduces their surface area for bugs</li><li>* ...</li></ul>This workshop, aimed at programmers, is designed to give you immediate benefits when modelling and implementing the most important parts of your codebase.",
                        "speakerName": "Mathias Verraes"
                    }]
                },
                {
                    "room": "Room #2",
                    "events": [{
                        "type": "conference",
                        "speakerPhoto": "http://ncrafts.io/assets/img/speakers/kennybrunothomas.jpg",
                        "time": "9:00 - 17:00",
                        "title": "EventStorming and Example Mapping From Problem Space to Solution Space",
                        "description": "The design patterns from Domain-Driven Design are gradually entering the collective consciousness of software developers. But most of the information out there focuses on mechanistic implementation details of the patterns: how to make an Entity in [insert favourite programming language], how to use the Repository pattern with [insert new hot ORM], how to make immutable Value Objects in [insert legacy framework]...<br><br>Applied individually, these patterns are useful, but are not giving you the full potential of Domain-Driven Design.<br><br>This one day training has a different approach. We address technical concerns in implementing the DDD patterns, but the focus is on the underlying principles and heuristics for building great domain-centric object-oriented code.<br><br><ul><li>* Why you’re underusing Value Objects</li><li>* Seeing objects as containers of lifecycles and consistency</li><li>* Discovering deeper domain concepts such as business rules, and lifting them into first class domain objects</li><li>* The relevance of processes, behaviour, temporal modelling... for finding better Aggregate boundaries</li><li>* How mutable software designs have distorted our perception of mutability in the domain</li><li>* Better heuristics for understanding a complex domain, and using them to drive a more focused design</li><li>* Reducing our dependance on service classes</li><li>* Designing an implementation model that not only encapsulates the domain, but communicates that design to future programmers and reduces their surface area for bugs</li><li>* ...</li></ul>This workshop, aimed at programmers, is designed to give you immediate benefits when modelling and implementing the most important parts of your codebase.",
                        "speakerName": "Kenny Baas-Schwegler, Bruno Boucard & Thomas Pierrain"
                    }]
                },
                {
                    "room": "Room #3",
                    "events": [{
                        "type": "conference",
                        "speakerPhoto": "http://ncrafts.io/assets/img/speakers/KevlinHenney.jpg",
                        "time": "9:00 - 17:00",
                        "title": "Refactoring to Immutability",
                        "description": "The design patterns from Domain-Driven Design are gradually entering the collective consciousness of software developers. But most of the information out there focuses on mechanistic implementation details of the patterns: how to make an Entity in [insert favourite programming language], how to use the Repository pattern with [insert new hot ORM], how to make immutable Value Objects in [insert legacy framework]...<br><br>Applied individually, these patterns are useful, but are not giving you the full potential of Domain-Driven Design.<br><br>This one day training has a different approach. We address technical concerns in implementing the DDD patterns, but the focus is on the underlying principles and heuristics for building great domain-centric object-oriented code.<br><br><ul><li>* Why you’re underusing Value Objects</li><li>* Seeing objects as containers of lifecycles and consistency</li><li>* Discovering deeper domain concepts such as business rules, and lifting them into first class domain objects</li><li>* The relevance of processes, behaviour, temporal modelling... for finding better Aggregate boundaries</li><li>* How mutable software designs have distorted our perception of mutability in the domain</li><li>* Better heuristics for understanding a complex domain, and using them to drive a more focused design</li><li>* Reducing our dependance on service classes</li><li>* Designing an implementation model that not only encapsulates the domain, but communicates that design to future programmers and reduces their surface area for bugs</li><li>* ...</li></ul>This workshop, aimed at programmers, is designed to give you immediate benefits when modelling and implementing the most important parts of your codebase.",
                        "speakerName": "Kevlin Henney"
                    }]
                },
                {
                    "room": "Room #4",
                    "events": [{
                        "type": "conference",
                        "speakerPhoto": "http://ncrafts.io/assets/img/speakers/WoodyZuill.jpg",
                        "time": "9:00 - 17:00",
                        "title": "Mob Programming",
                        "description": "The design patterns from Domain-Driven Design are gradually entering the collective consciousness of software developers. But most of the information out there focuses on mechanistic implementation details of the patterns: how to make an Entity in [insert favourite programming language], how to use the Repository pattern with [insert new hot ORM], how to make immutable Value Objects in [insert legacy framework]...<br><br>Applied individually, these patterns are useful, but are not giving you the full potential of Domain-Driven Design.<br><br>This one day training has a different approach. We address technical concerns in implementing the DDD patterns, but the focus is on the underlying principles and heuristics for building great domain-centric object-oriented code.<br><br><ul><li>* Why you’re underusing Value Objects</li><li>* Seeing objects as containers of lifecycles and consistency</li><li>* Discovering deeper domain concepts such as business rules, and lifting them into first class domain objects</li><li>* The relevance of processes, behaviour, temporal modelling... for finding better Aggregate boundaries</li><li>* How mutable software designs have distorted our perception of mutability in the domain</li><li>* Better heuristics for understanding a complex domain, and using them to drive a more focused design</li><li>* Reducing our dependance on service classes</li><li>* Designing an implementation model that not only encapsulates the domain, but communicates that design to future programmers and reduces their surface area for bugs</li><li>* ...</li></ul>This workshop, aimed at programmers, is designed to give you immediate benefits when modelling and implementing the most important parts of your codebase.",
                        "speakerName": "Woody Zuill"
                    }]
                }
            ]
        },
        {
            "day": 2,
            "date": "16/05/2019",
            "title": "Day 1",
            "location": "NEW CAP Event Center",
            "address": "3 Quai de Grenelle – 75015 Paris",
            "rooms": [{
                    "room": "Lovelace",
                    "events": [{
                            "type": "break",
                            "speakerPhoto": "",
                            "time": "8:30 - 9:00",
                            "title": "Check-in time",
                            "description": "",
                            "speakerName": ""
                        },
                        {
                            "speakerId": "Ulrikama",
                            "speakerName": "Ulrika Malmgren",
                            "twitter": "https://twitter.com/Ulrikama",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/UlrikaMalmgren.jpg",
                            "id": "nc19-uma01",
                            "title": "KEYNOTE : The one with the compiler always wins",
                            "type": "Talk",
                            "description": "The programmer holds the power in the team. The UX designer, the product owner, the manager, the tester, the agile coach and others can try their best to influence outcomes but it doesn’t matter if the programmer is not on board. Only the programmer decides which if-statements get written and how long it will take. Without the programmer, there is no software. Without the software, there is no company. But as the saying goes, with great power comes great responsibility. One of those responsibilities is to acknowledge this power and use it for good. Good for the human beings working with you, good for the company, good for your own health and good for society.",
                            "room": "Lovelace",
                            "date": "16/05/2019",
                            "time": "09:15 - 10:00",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Coffee break",
                            "type": "break",
                            "description": "",
                            "room": "Lovelace",
                            "date": "16/05/2019",
                            "time": "10:00 - 10:30",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "SamirTalwar",
                            "speakerName": "Samir Talwar",
                            "twitter": "https://twitter.com/SamirTalwar",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/SamirTalwar.jpg",
                            "id": "nc19-sta01",
                            "title": "Teaching a machine to code",
                            "type": "Talk",
                            "description": "At [Prodo.AI](http://prodo.ai/), we’re teaching machines to write code for humans. Using the latest in Deep Learning techniques, we can generate code that’s not just functional, but beautiful. Our goal is to make the computer do the heavy lifting so you can concentrate on the important things: being creative, solving problems, and having fun.We’ve tried a hundred different ways of encoding the knowledge of *how* to write code. In this talk, Samir will take you through a tour of the different techniques, architectures and optimisations we’ve tried in the process of teaching a machine to write code, using neural networks, simulations and everything in between.",
                            "room": "Lovelace",
                            "date": "16/05/2019",
                            "time": "10:30 - 11:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "einarwh",
                            "speakerName": "Einar Høst",
                            "twitter": "https://twitter.com/einarwh",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/EinarHost.jpg",
                            "id": "nc19-eho01",
                            "title": "Escher in Elm",
                            "type": "Talk",
                            "description": "his is a live coding session based on a classic 1982 paper by Peter Henderson. The paper shows the decomposition and reconstruction of Escher's woodcutting \"Square Limit\", a beautiful recursive tessellation of interleaving fish, using functional programming. We will define a set of functions that operate on pictures - transforming them and composing them into more complex pictures. With these functions implemented, we will follow in Henderson's footsteps to create a replica of Escher's Square Limit as an SVG. We will use Elm as the implementation language.",
                            "room": "Lovelace",
                            "date": "16/05/2019",
                            "time": "11:30 - 12:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Lunch break",
                            "type": "lunch",
                            "description": "",
                            "room": "Lovelace",
                            "date": "16/05/2019",
                            "time": "12:15 - 14:00",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "thinkb4coding",
                            "speakerName": "Jérémie Chassaing",
                            "twitter": "https://twitter.com/thinkb4coding",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/JeremieChassaing.jpg",
                            "id": "nc19-jch01",
                            "title": "Applicatives IRL",
                            "type": "Talk",
                            "description": "Monads are all the rage in FP land, but Applicatives, despite lack of love can help and save In Real Life situation. We'll learn to recognize them and use them, then with three examples will see how far Applicatives can be applied to your domain or technical code for the better.",
                            "room": "Lovelace",
                            "date": "16/05/2019",
                            "time": "14:00 - 14:45",
                            "tags": [
                                "Functional programming"
                            ],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "brassy",
                            "speakerName": "Emanuela Damiani",
                            "twitter": "https://twitter.com/brassy",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/EmanuelaDamiani.jpg",
                            "id": "nc19-eda01",
                            "title": "Community based design",
                            "type": "Talk",
                            "description": "A design process can be extraordinarily structured, or entirely missing. Either way, it often requires a remarkable number of conversations with all the stakeholders involves, including people from different departments and the users. But, what does happen when we add the unpredictable power of a community? In this talk, I’ll share my thoughts, fears and views on working for an open-source product.",
                            "room": "Lovelace",
                            "date": "16/05/2019",
                            "time": "15:00 - 15:45",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "helenleigh",
                            "speakerName": "Helen Leigh",
                            "twitter": "https://twitter.com/helenleigh",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/HelenLeigh.jpg",
                            "id": "nc19-hle01",
                            "title": "Music tech hacking",
                            "type": "Talk",
                            "description": "how hardware and software is being used and abused by artists, musicians and product designers in the London, Berlin and Chicago maker scenes.",
                            "room": "Lovelace",
                            "date": "16/05/2019",
                            "time": "16:00 - 16:45",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Coffee time",
                            "type": "break",
                            "description": "",
                            "room": "Lovelace",
                            "date": "16/05/2019",
                            "time": "16:45 - 17:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "ziobrando",
                            "speakerName": "Alberto Brandolini",
                            "twitter": "https://twitter.com/ziobrando",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/AlbertoBrandolini.jpg",
                            "id": "nc19-abr01",
                            "title": "KEYNOTE : The gordian knot → Hatching Software Development Ecosystems",
                            "type": "Talk",
                            "description": "Some companies are going \"full DevOps\" and apparently releasing at the speed of light. Other companies are still struggling with estimations and slowly thinking about going microservices. Other are happy with their monolith, but struggling with recruiting.\n\nWe’re all developers, but we’re not doing the same job. The line connecting a problem to its solution is relatively straight in some organizations and incredibly convoluted in some hours.\n\nProcesses, Software architectures and Organization are not separate concerns, neither are orthogonal. Pretending to fix one thing without touching others is a losing battle.\n\nWe’re part of the problem. Our software is part of the problem. We can be part of the solution too.",
                            "room": "Lovelace",
                            "date": "16/05/2019",
                            "time": "17:15 - 18:00",
                            "tags": [],
                            "cospeakers": []
                        }
                    ]
                },
                {
                    "room": "Hopper",
                    "events": [{
                            "type": "break",
                            "speakerPhoto": "",
                            "time": "8:30 - 9:00",
                            "title": "Check-in time",
                            "description": "",
                            "speakerName": ""
                        },
                        {
                            "speakerId": "Ulrikama",
                            "speakerName": "Ulrika Malmgren",
                            "twitter": "https://twitter.com/Ulrikama",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/UlrikaMalmgren.jpg",
                            "id": "nc19-uma01",
                            "title": "KEYNOTE : The one with the compiler always wins",
                            "type": "Talk",
                            "description": "The programmer holds the power in the team. The UX designer, the product owner, the manager, the tester, the agile coach and others can try their best to influence outcomes but it doesn’t matter if the programmer is not on board. Only the programmer decides which if-statements get written and how long it will take. Without the programmer, there is no software. Without the software, there is no company. But as the saying goes, with great power comes great responsibility. One of those responsibilities is to acknowledge this power and use it for good. Good for the human beings working with you, good for the company, good for your own health and good for society.",
                            "room": "Hopper",
                            "date": "16/05/2019",
                            "time": "09:15 - 10:00",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Coffee break",
                            "type": "break",
                            "description": "",
                            "room": "Hopper",
                            "date": "16/05/2019",
                            "time": "10:00 - 10:30",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "clementd",
                            "speakerName": "Clément Delafargue",
                            "twitter": "https://twitter.com/clementd",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/ClementDelafargue.jpg",
                            "id": "nc19-cde01",
                            "title": "Application design with a stack of monads",
                            "type": "Talk",
                            "description": "Functional Programming is often seen as a nice tool for small-scale concerns, not as a tool for application design. \"Functional in the small, OO in the large\" is often heard and sums up this idea quite well. However, functional programming comes with interesting tools aimed at solving these boring (or deemed boring) concerns: dependency inversion, observability). Aspect-Oriented-Programming is often used for this in the OO word. \n\nA functional solution, called a _monad stack_, allows to combine all this cross-cutting concerns and behaviours with no magic (or not too much). \n\nIn this conference, we'll see what _monad transformers_ are, how they work, and how to use them to structure a web application, with examples in scala and haskell.",
                            "room": "Hopper",
                            "date": "16/05/2019",
                            "time": "10:30 - 11:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "gwendiagram",
                            "speakerName": "Gwen Diagram",
                            "twitter": "https://twitter.com/gwendiagram",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/GwenDiagram.jpg",
                            "id": "nc19-gdi01",
                            "title": "Security by Stealth",
                            "type": "Talk",
                            "description": "Security isn't very fun for development teams to think about. It's complex and something that isn't brought to mind when considering requirements. Too often, it neglected by teams and left to the end for penetration testers to consider. But, it doesn't have to be. Security can be considered early in the development cycle. How can we encourage this behaviour? How can you get development teams interested?\n\nSecurity is an important skill to possess while delivering quality software. The cost of not having security skills within teams is now more obvious than ever. Security should be in the forefront of development teams minds. Even with these risks, data leaks and denial of service attacks are in the headlines often. How do we stop our companies being another statistic?\n\nLearning should not be compulsory. Especially if you want something to become part of the culture. Beginning with a simple workshop to expanding to a security guild, people were eager to be involved. This lead to further workshops which included the basics of threat modelling using STRIDE to the complexity of automated checks. Security at Sky became not only fun but cool. Security was no longer a rarely thought about requirement but a fun, oft thought about need.",
                            "room": "Hopper",
                            "date": "16/05/2019",
                            "time": "11:30 - 12:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Lunch break",
                            "type": "lunch",
                            "description": "",
                            "room": "Hopper",
                            "date": "16/05/2019",
                            "time": "12:15 - 14:00",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "SavarinAnna",
                            "speakerName": "Anna Savarin",
                            "twitter": "https://twitter.com/SavarinAnna",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/AnnaSavarin.jpg",
                            "id": "nc19-asa01",
                            "title": "Non-Euclidean Software Delivery",
                            "type": "Talk",
                            "description": "After some project experience, you would think software development is about feature branches and pull requests, sprints, deadlines and tardy code, brittleness and tech debt, JIRA and PMs, heroic teammates, and stress. It has to be that way as these are all byproducts of some hidden axioms.\n\nWelcome to my new world where axioms are reversed and parallel lines cross! Ever since I joined my mob team and started practicing Extreme Programming, I have been slowly tossing out of the window everything I know so far about software delivery.  Fresh, newcomer perspective is short-lived and high-value, and I would like to share my amazement at this non-Euclidean way of delivering software, before it becomes the new norm for me.",
                            "room": "Hopper",
                            "date": "16/05/2019",
                            "time": "14:00 - 14:45",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "rinkkasatiainen",
                            "speakerName": "Aki Salmi",
                            "twitter": "https://twitter.com/rinkkasatiainen",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/AkiSalmi.jpg",
                            "id": "nc19-asa01",
                            "title": "Railroad-Driven Programming",
                            "type": "Talk",
                            "description": "Tired of if-statements cluttering up your code?\nIn this talk, you will be guided to railroad tracks - web app designed and implemented functionally using heavily Either Monads. Everything is either a Success or Error, or rather a Future of Success or Errors. \nDuring the talk, few monads are discussed, like Maybe and Either, using examples from SanctuaryJS (which is used in the app). Also some good practices that makes the domain code easy to understand.\nThe talk will be based on real code that runs in production.",
                            "room": "Hopper",
                            "date": "16/05/2019",
                            "time": "15:00 - 15:45",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "matthiasnoback",
                            "speakerName": "Matthias Noback",
                            "twitter": "https://twitter.com/matthiasnoback",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/MatthiasNoback.jpg",
                            "id": "nc19-mno01",
                            "title": "Brutal refactoring, lying code, the Churn, and other emotional stories from Legacy Land",
                            "type": "Talk",
                            "description": "Working effectively with legacy code isn’t all about creating test harnesses before refactoring algorithms. The \"safety first\" strategy doesn’t always apply. Not if the code you’re looking at is LYING IN YOUR FACE anyway.\n\nIn this talk I’ll show you what brutal refactoring is. I’ll show you the red glowy eyes of the Churn. And I’ll hold up some big warning signs that should prevent you from producing legacy code today.\n\nTable flips allowed.",
                            "room": "Hopper",
                            "date": "16/05/2019",
                            "time": "16:00 - 16:45",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Coffee time",
                            "type": "break",
                            "description": "",
                            "room": "Hopper",
                            "date": "16/05/2019",
                            "time": "16:45 - 17:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "ziobrando",
                            "speakerName": "Alberto Brandolini",
                            "twitter": "https://twitter.com/ziobrando",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/AlbertoBrandolini.jpg",
                            "id": "nc19-abr01",
                            "title": "KEYNOTE : The gordian knot → Hatching Software Development Ecosystems",
                            "type": "Talk",
                            "description": "Some companies are going \"full DevOps\" and apparently releasing at the speed of light. Other companies are still struggling with estimations and slowly thinking about going microservices. Other are happy with their monolith, but struggling with recruiting.\n\nWe’re all developers, but we’re not doing the same job. The line connecting a problem to its solution is relatively straight in some organizations and incredibly convoluted in some hours.\n\nProcesses, Software architectures and Organization are not separate concerns, neither are orthogonal. Pretending to fix one thing without touching others is a losing battle.\n\nWe’re part of the problem. Our software is part of the problem. We can be part of the solution too.",
                            "room": "Hopper",
                            "date": "16/05/2019",
                            "time": "17:15 - 18:00",
                            "tags": [],
                            "cospeakers": []
                        }
                    ]
                },
                {
                    "room": "Liskov",
                    "events": [{
                            "type": "break",
                            "speakerPhoto": "",
                            "time": "8:30 - 9:00",
                            "title": "Check-in time",
                            "description": "",
                            "speakerName": ""
                        },
                        {
                            "speakerId": "Ulrikama",
                            "speakerName": "Ulrika Malmgren",
                            "twitter": "https://twitter.com/Ulrikama",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/UlrikaMalmgren.jpg",
                            "id": "nc19-uma01",
                            "title": "KEYNOTE : The one with the compiler always wins",
                            "type": "Talk",
                            "description": "The programmer holds the power in the team. The UX designer, the product owner, the manager, the tester, the agile coach and others can try their best to influence outcomes but it doesn’t matter if the programmer is not on board. Only the programmer decides which if-statements get written and how long it will take. Without the programmer, there is no software. Without the software, there is no company. But as the saying goes, with great power comes great responsibility. One of those responsibilities is to acknowledge this power and use it for good. Good for the human beings working with you, good for the company, good for your own health and good for society.",
                            "room": "Liskov",
                            "date": "16/05/2019",
                            "time": "09:15 - 10:00",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Coffee break",
                            "type": "break",
                            "description": "",
                            "room": "Liskov",
                            "date": "16/05/2019",
                            "time": "10:00 - 10:30",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "XDetant",
                            "speakerName": "Xavier Detant",
                            "twitter": "https://twitter.com/XDetant",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/XavierDetant.jpg",
                            "id": "nc19-xde01",
                            "title": "Test && commit || revert",
                            "type": "Talk",
                            "description": "[Kent Beck wrote an article](https://medium.com/@kentbeck_7670/test-commit-revert-870bbd756864) about a technique invented by Oddmund Str√∏mmer last september. TCR is an alternative to TDD that enforce even more extreme rules than TDD. The goal of this talk is to present the principles, pros and cons according to my experience with TCR.\nEvery point will be illustrated with examples. Finally, we'll try to adapt TCR a bit in order to mitigate the identified cons.",
                            "room": "Liskov",
                            "date": "16/05/2019",
                            "time": "10:30 - 11:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "patkua",
                            "speakerName": "Patrick Kua",
                            "twitter": "https://twitter.com/patkua",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/PatrickKua.jpg",
                            "id": "nc19-pku01",
                            "title": "Talking with Tech Leads",
                            "type": "Talk",
                            "description": "",
                            "room": "Liskov",
                            "date": "16/05/2019",
                            "time": "11:30 - 12:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Lunch break",
                            "type": "lunch",
                            "description": "",
                            "room": "Liskov",
                            "date": "16/05/2019",
                            "time": "12:15 - 14:00",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "KevlinHenney",
                            "speakerName": "Kevlin Henney",
                            "twitter": "https://twitter.com/KevlinHenney",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/KevlinHenney.jpg",
                            "id": "nc19-khe01",
                            "title": "The Passions of Programming",
                            "type": "Talk",
                            "description": "\"We're looking for passionate programmers!\" says the job ad. For a love-in or a development role? _Passion_ is used to evoke single-mindedness, drive and intensity, but it also has many other meanings, surely not all of which can be intended. Love aside, passion also spills over into irrationality, aggression — e.g., crimes of passion — and unconditional and unquestioning pursuit of ideas. Our acceptance of this word and this quality should be partial and conditional. But there is more than one kind of passion, and when raw passion is tempered with compassion and dispassion we start to see a more balanced way of development.\n\nGood development draws on both creativity and rationality, on both experience and experimentation, on both focus and connection, on both individual skill and group intelligence. The dry language of productivity needs to admit the possibility of enjoyment; the culture of burn-out needs to give way to humanity and empathy. Let's explore the many passions of programming.",
                            "room": "Liskov",
                            "date": "16/05/2019",
                            "time": "14:00 - 14:45",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "saleandro",
                            "speakerName": "Sabrina Leandro",
                            "twitter": "https://twitter.com/saleandro",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/SabrinaLeandro.jpg",
                            "id": "nc19-sle01",
                            "title": "How to rewrite, a bit at a time",
                            "type": "Talk",
                            "description": "There’s nothing more frustrating than not being able to deliver new features because of unnecessarily complicated code. A fast deployment pipeline is of no use if the code itself is too hard and slow to change.\n\nYou may decide it’s time to throw it all away and start over… and what began full of optimism, drags on for months and years, adding even more complexity and various levels of legacy.\n\nIt doesn’t have to be this way! In this presentation, you’ll hear a first-hand experience of how to approach technical debt in an iterative way. This talk will teach you lessons on how to start, and most importantly, finish a big rewrite project.\n\nYou will learn how to approach the conversation with the \"business\", avoid the most common pitfalls when changing the architecture of a complex codebase, and ensure the rewrite brings value from the start till the very happy end.",
                            "room": "Liskov",
                            "date": "16/05/2019",
                            "time": "15:00 - 15:45",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "SteveSmithCD",
                            "speakerName": "Steve Smith",
                            "twitter": "https://twitter.com/SteveSmithCD",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/SteveSmith.jpg",
                            "id": "nc19-ssm01",
                            "title": "Continuous Delivery and the Theory of Constraints",
                            "type": "Talk",
                            "description": "How should you actually implement Continuous Delivery?\n\nAdopting Continuous Delivery takes time. You have a long list of technology and organisational changes to consider. You have to work within the unique circumstances of your organisation. You’re constantly surrounded by strange problems, half-baked theories, off the shelf solutions that just don’t work, and people telling you they’ve worked here for 23 years and Amazon is nothing to worry about.\n\nHow do you identify and remove the major impediments in your build, testing, and operational activities? How do you avoid spending weeks, months, or years on far-reaching changes that ultimately have no impact on your time to market?\n\nThe Theory of Constraints is a management paradigm that describes how to improve throughput in a homogeneous workflow. It can be applied to Continuous Delivery in order to locate, prioritise, and reduceconstrained activities until a flow of release candidates to production is achieved.\n\nIn this talk, Steve Smith will explain how easy it is for a Continuous Delivery programme to be unsuccessful, how the Theory Of Constraints works, how to apply the Five Focussing Steps to Continuous Delivery, and how to home in on the constrained activities that are your keys to success. It includes tales of glorious failures and ignominious successes when adopting Continuous Delivery.",
                            "room": "Liskov",
                            "date": "16/05/2019",
                            "time": "16:00 - 16:45",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Coffee time",
                            "type": "break",
                            "description": "",
                            "room": "Liskov",
                            "date": "16/05/2019",
                            "time": "16:45 - 17:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "ziobrando",
                            "speakerName": "Alberto Brandolini",
                            "twitter": "https://twitter.com/ziobrando",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/AlbertoBrandolini.jpg",
                            "id": "nc19-abr01",
                            "title": "KEYNOTE : The gordian knot → Hatching Software Development Ecosystems",
                            "type": "Talk",
                            "description": "Some companies are going \"full DevOps\" and apparently releasing at the speed of light. Other companies are still struggling with estimations and slowly thinking about going microservices. Other are happy with their monolith, but struggling with recruiting.\n\nWe’re all developers, but we’re not doing the same job. The line connecting a problem to its solution is relatively straight in some organizations and incredibly convoluted in some hours.\n\nProcesses, Software architectures and Organization are not separate concerns, neither are orthogonal. Pretending to fix one thing without touching others is a losing battle.\n\nWe’re part of the problem. Our software is part of the problem. We can be part of the solution too.",
                            "room": "Liskov",
                            "date": "16/05/2019",
                            "time": "17:15 - 18:00",
                            "tags": [],
                            "cospeakers": []
                        }
                    ]
                },
                {
                    "room": "Kare",
                    "events": [{
                            "type": "break",
                            "speakerPhoto": "",
                            "time": "8:30 - 9:00",
                            "title": "Check-in time",
                            "description": "",
                            "speakerName": ""
                        },
                        {
                            "speakerId": "Ulrikama",
                            "speakerName": "Ulrika Malmgren",
                            "twitter": "https://twitter.com/Ulrikama",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/UlrikaMalmgren.jpg",
                            "id": "nc19-uma01",
                            "title": "KEYNOTE : The one with the compiler always wins",
                            "type": "Talk",
                            "description": "The programmer holds the power in the team. The UX designer, the product owner, the manager, the tester, the agile coach and others can try their best to influence outcomes but it doesn’t matter if the programmer is not on board. Only the programmer decides which if-statements get written and how long it will take. Without the programmer, there is no software. Without the software, there is no company. But as the saying goes, with great power comes great responsibility. One of those responsibilities is to acknowledge this power and use it for good. Good for the human beings working with you, good for the company, good for your own health and good for society.",
                            "room": "Kare",
                            "date": "16/05/2019",
                            "time": "09:15 - 10:00",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Coffee break",
                            "type": "break",
                            "description": "",
                            "room": "Kare",
                            "date": "16/05/2019",
                            "time": "10:00 - 10:30",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "w3ltraumpirat",
                            "speakerName": "Tobias Goeschel",
                            "twitter": "https://twitter.com/w3ltraumpirat",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/TobiasGoeschel.jpg",
                            "id": "nc19-tgo01",
                            "title": "Domain Prototyping, or Design is How it Works.",
                            "type": "Talk",
                            "description": "When we design a system from scratch, especially complex distributed systems, with microservices and/or Big Data pipelines, we have to make a series of important tactical decisions regarding the structure and information flow within our domain. If we assume boundaries in the wrong place, or forget or omit important aspects of communication, we can end up with brittle services, performance issues, and needlessly coupled modules and components, which are painful to maintain and deploy.\nSome of those aspects are hard to discover upfront, and even with great experience, it's not unusual to get the first design at least partially wrong. \n\nOne way to minimize the consequences of those decisions, and to verify our initial assumptions, is to start implementation not with a full architecture in mind, but rather with the smallest possible footprint: A plain, but fully operational prototype of the domain model, which we can stress, observe and explore - and change easily, if we run into problems. This way, we can actually _see_ our design work, and gain valuable insights.\n\nUsing examples, I will demonstrate how combining Domain Driven Design with the practices, heuristics and principles of Software Crafting can highlight difficult or problematic choices, improve fundamental architecture decisions, and ultimately lead to better and more sustainable software systems, long before we get sidetracked by the additional complexity of host environments and deployment pipelines.",
                            "room": "Kare",
                            "date": "16/05/2019",
                            "time": "10:30 - 11:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "malk_zameth",
                            "speakerName": "Romeu Moura",
                            "twitter": "https://twitter.com/malk_zameth",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/RomeuMoura.jpg",
                            "id": "nc19-rmo01",
                            "title": "Bourdieu's Social theory and our work in tech",
                            "type": "Talk",
                            "description": "We know psychological safety is necessary for any working team to work But how achievable is it? I posit that due to our current blind spots our visions on that are naïve. Let's dig together on why! tis time for some Sociological Theory, let's Vulgarise Bourdieu! Buckle up for a keynote on\n\nSymbolic Violence.\nSocial/Corporeal Hexis.\nCultural Capital.\nInteractions of those 3 and \"Agile\" Methods.",
                            "room": "Kare",
                            "date": "16/05/2019",
                            "time": "11:30 - 12:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Lunch break",
                            "type": "lunch",
                            "description": "",
                            "room": "Kare",
                            "date": "16/05/2019",
                            "time": "12:15 - 14:00",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "elefevre",
                            "speakerName": "Eric Lefevre-Ardant",
                            "twitter": "https://twitter.com/elefevre",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/EricLefevre-Ardant.jpg",
                            "id": "nc19-ele01",
                            "title": "Plankalkül: a high-level language from the 1940s",
                            "type": "Lightning Talk",
                            "description": "At the dawn of the computer age, only Assembly languages could be used to program computers without going through the recabling process. Modern programming languages only appeared in the 1950s.\n\nStill, in the 1940s, a German inventor designed Plankalkül. Its influence has been limited, but its ideads were incredibly advanced for the times.\n\nTogether, let's rediscover the first high-level programming language in history.",
                            "room": "Kare",
                            "date": "16/05/2019",
                            "time": "14:00 - 14:20",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "estelandry",
                            "speakerName": "Estelle Landry",
                            "twitter": "https://twitter.com/estelandry",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/EstelleLandry.jpg",
                            "id": "nc19-ela01",
                            "title": "How to lose your feature overload ?",
                            "type": "Lightning Talk",
                            "description": "The application life cycle is a nebulous and dangerous road. \nThe complexity increases exponentially . One of the developer biggest challenges is to be able to control this complexity while adding new features.\n\nSeveral solutions exist: code rewriting or mastery of technical debt. \nThe only true solution: Remove features!\nThis talk will explain how to lose your application featural overload by understanding the difference between the essential complexity and the accidental complexity, but also by giving you keys to carry out these changes in your project teams.",
                            "room": "Kare",
                            "date": "16/05/2019",
                            "time": "14:25 - 14:45",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "jpalies",
                            "speakerName": "Jean Paliès",
                            "twitter": "https://twitter.com/jpalies",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/JeanPalies.jpg",
                            "id": "nc19-jpa01",
                            "title": "How video games taught me event sourcing",
                            "type": "Lightning Talk",
                            "description": "In the early 2000s, I got puzzled by the small size of replay files for video games. I then dug into them and found some food for thought!",
                            "room": "Kare",
                            "date": "16/05/2019",
                            "time": "15:00 - 15:20",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "dorrabartaguiz",
                            "speakerName": "Dorra Bartaguiz",
                            "twitter": "https://twitter.com/dorrabartaguiz",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/DorraBartaguiz.jpg",
                            "id": "nc19-dba01",
                            "title": "Slim Down Diet & TDD",
                            "type": "Lightning Talk",
                            "description": "You'd like to get into TDD before next summer, but you're afraid you'll never make it on time? Don't worry, you'll find out how to succeed thanks to the 5 exclusive rules of slim down diets, such as \"reduce the size of the portions\", or \"mind the calories\" among other tips to overcome the obstacles and the friction. This talk will hand you the keys to start well and get on top of new TDD habits!",
                            "room": "Kare",
                            "date": "16/05/2019",
                            "time": "15:25 - 15:45",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "ddoomen",
                            "speakerName": "Dennis Doomen",
                            "twitter": "https://twitter.com/ddoomen",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/DennisDoomen.jpg",
                            "id": "nc19-ddo01",
                            "title": "Event Sourcing Done Right - Experiences from the Trenches",
                            "type": "Talk",
                            "description": "Over the years I've spoken many times about what Event Sourcing is and shared many of the good, the bad and the ugly parts of it in blog posts and various talks. However, I've never talked about how to actually build a system based on this architecture style. I keep getting the same questions over and over again. Like when to apply Event Sourcing and at what architectural level. How to deal with transactional boundaries within and outside the domain. How to build projections that are autonomous, reliable and self-supporting. How to deal with upgrades and blue-green deployments. But also on how to handle bugs, design mistakes and crashing projections. Having made a lot of these mistakes myself over these years, it's time to share my current thoughts and opinions about this. Since the .NET space has a pretty rich set of open-source projections to support this, the examples and code will be .NET. But the concepts are universal, so don't let that scare you off.",
                            "room": "Kare",
                            "date": "16/05/2019",
                            "time": "16:00 - 16:45",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Coffee time",
                            "type": "break",
                            "description": "",
                            "room": "Kare",
                            "date": "16/05/2019",
                            "time": "16:45 - 17:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "ziobrando",
                            "speakerName": "Alberto Brandolini",
                            "twitter": "https://twitter.com/ziobrando",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/AlbertoBrandolini.jpg",
                            "id": "nc19-abr01",
                            "title": "KEYNOTE : The gordian knot → Hatching Software Development Ecosystems",
                            "type": "Talk",
                            "description": "Some companies are going \"full DevOps\" and apparently releasing at the speed of light. Other companies are still struggling with estimations and slowly thinking about going microservices. Other are happy with their monolith, but struggling with recruiting.\n\nWe’re all developers, but we’re not doing the same job. The line connecting a problem to its solution is relatively straight in some organizations and incredibly convoluted in some hours.\n\nProcesses, Software architectures and Organization are not separate concerns, neither are orthogonal. Pretending to fix one thing without touching others is a losing battle.\n\nWe’re part of the problem. Our software is part of the problem. We can be part of the solution too.",
                            "room": "Kare",
                            "date": "16/05/2019",
                            "time": "17:15 - 18:00",
                            "tags": [],
                            "cospeakers": []
                        }
                    ]
                },
                {
                    "room": "Goldberg",
                    "events": [{
                            "type": "break",
                            "speakerPhoto": "",
                            "time": "8:30 - 9:00",
                            "title": "Check-in time",
                            "description": "",
                            "speakerName": ""
                        },
                        {
                            "speakerId": "Ulrikama",
                            "speakerName": "Ulrika Malmgren",
                            "twitter": "https://twitter.com/Ulrikama",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/UlrikaMalmgren.jpg",
                            "id": "nc19-uma01",
                            "title": "KEYNOTE : The one with the compiler always wins",
                            "type": "Talk",
                            "description": "The programmer holds the power in the team. The UX designer, the product owner, the manager, the tester, the agile coach and others can try their best to influence outcomes but it doesn’t matter if the programmer is not on board. Only the programmer decides which if-statements get written and how long it will take. Without the programmer, there is no software. Without the software, there is no company. But as the saying goes, with great power comes great responsibility. One of those responsibilities is to acknowledge this power and use it for good. Good for the human beings working with you, good for the company, good for your own health and good for society.",
                            "room": "Goldberg",
                            "date": "16/05/2019",
                            "time": "09:15 - 10:00",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "type": "break",
                            "speakerPhoto": "",
                            "time": "9:45 - 10:15",
                            "title": "Coffee break",
                            "description": "",
                            "room": "Goldberg",
                            "date": "16/05/2019",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "selketjah",
                            "speakerName": "Gien Verschatse",
                            "twitter": "https://twitter.com/selketjah",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/GienVerschatse.jpg",
                            "id": "nc19-gve01",
                            "title": "Devils, Wizards and Decision Making Heuristics: Magic 8 Balls to the Rescue",
                            "type": "Hands-on",
                            "description": "Coffee or tea? One sugar or two? Should we use Event Sourcing or does CRUD seem good to you?\n\nOur brains are designed for making quick decisions, but quick does not always mean good… We make thousands of decisions each day but never stop to wonder: how did we come to this conclusion? Were there more choices than we realised? Did we focus on the right thing? Did we pick the right option? Are there other methods we can use to reach a better outcome?\nIf we improved our decision making by just 1%, overall we would achieve a massive improvement in every area of our lives, from happiness with our family to success at work. Everybody should learn decision making heuristics, yet nobody does. Let’s fix that.\n\nWe’re going to take a close look at a variety of key decision-making heuristics including \"problem restatement\", \"devil’s advocate\", and \"the wizard\". Through provocative exercises, we’re going to uncover the heuristics we currently use and we’re going to teach ourselves when to apply certain decision making heuristics to improve our chances of getting the results we want.",
                            "room": "Goldberg",
                            "date": "16/05/2019",
                            "time": "10:15 - 12:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Lunch break",
                            "type": "lunch",
                            "description": "",
                            "room": "Goldberg",
                            "date": "16/05/2019",
                            "time": "12:15 - 13:45",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "huizendveld",
                            "speakerName": "Marijn Huizendveld",
                            "twitter": "https://twitter.com/huizendveld",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/MarijnHuizendveld.jpg",
                            "id": "nc19-mhu01",
                            "title": "Iterating on domain models",
                            "type": "Hands-on",
                            "description": "The first model a team comes up with often leads them down a particular path. That isn't much of a problem if the first model is any good. But often our first ideas aren't our best. How can you prevent bias towards your initial approach? What could you do to break free from the boundaries you first imagined?\n\nIn this hands-on you'll be working on a single problem but you'll be forced to re-imagine it multiple times with different constraints. In each round you'll be limited in such a way that you'll have to get creative and come up with vastly different models for the same problem space. At the end you'll see what the power is of an enabling constraint. The Monday after the conference you'll know that with a little digging and thinking you can come up with entirely different models for about any problem space.",
                            "room": "Goldberg",
                            "date": "16/05/2019",
                            "time": "13:45 - 15:45",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "johan_alps",
                            "speakerName": "Johan Martinsson",
                            "twitter": "https://twitter.com/johan_alps",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/JohanMartinsson.jpg",
                            "id": "nc19-jma01",
                            "title": "Rescuing legacy - from legacy to TDD",
                            "type": "Quick Hands-on",
                            "description": "What's the main hurdle of doing TDD in our existing codebase? The difficulty of testing the untestable code of our legacy codebase so that it can be refactored into something where it is easy to add functionality using TDD.\n\nBut how is this done when I have no separation of layers, no architecture and I can't even mock the database? Well let's see the workflow through a live demonstration of how tests are put in place, how the code is refactored and then finally how tests are separated into different layers of the testing pyramid, and finally how easy it becomes to TDD the new feature!\n\nThis demonstrates not only the basic workflow of modern development with legacy code, but also how we can leverage preparatory refactoring to gain time even in the short term, thanks to testing. Additionally it illustrates how respecting the testing pyramid makes a developers life more pleasant.\n\nCode that makes no sense to unit test due to bad design is a common problem. This small example models this problem in realistic way due to its hard-coded integration with external dependencies that cannot be \"stubbed out\".",
                            "room": "Goldberg",
                            "date": "16/05/2019",
                            "time": "16:00 - 17:00",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Coffee time",
                            "type": "break",
                            "description": "",
                            "room": "Goldberg",
                            "date": "16/05/2019",
                            "time": "17:00 - 17:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "ziobrando",
                            "speakerName": "Alberto Brandolini",
                            "twitter": "https://twitter.com/ziobrando",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/AlbertoBrandolini.jpg",
                            "id": "nc19-abr01",
                            "title": "KEYNOTE : The gordian knot → Hatching Software Development Ecosystems",
                            "type": "Talk",
                            "description": "Some companies are going \"full DevOps\" and apparently releasing at the speed of light. Other companies are still struggling with estimations and slowly thinking about going microservices. Other are happy with their monolith, but struggling with recruiting.\n\nWe’re all developers, but we’re not doing the same job. The line connecting a problem to its solution is relatively straight in some organizations and incredibly convoluted in some hours.\n\nProcesses, Software architectures and Organization are not separate concerns, neither are orthogonal. Pretending to fix one thing without touching others is a losing battle.\n\nWe’re part of the problem. Our software is part of the problem. We can be part of the solution too.",
                            "room": "Goldberg",
                            "date": "16/05/2019",
                            "time": "17:15 - 18:00",
                            "tags": [],
                            "cospeakers": []
                        }
                    ]
                }
            ]
        },
        {
            "day": 3,
            "date": "17/05/2019",
            "title": "Day 2",
            "rooms": [{
                    "room": "Lovelace",
                    "events": [{
                            "type": "break",
                            "speakerPhoto": "",
                            "time": "8:30 - 9:00",
                            "title": "Check-in time",
                            "description": "",
                            "speakerName": ""
                        },
                        {
                            "speakerId": "aprilwensel",
                            "speakerName": "April Wensel",
                            "twitter": "https://twitter.com/aprilwensel",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/AprilWensel.jpg",
                            "id": "nc19-awe01",
                            "title": "KEYNOTE : Crafting Compassionate Code",
                            "type": "Talk",
                            "description": "As developers, we might think we don't have to care about humans because we work on machines. However, nothing could be further from the truth. The only reason for us to build technology is to serve humans.\n\nTherefore, practicing compassion is essential for effective software development. Though many people think of compassion as something soft or ambiguous, you'll learn how compassion provides a practical framework for making rational decisions about our code with the goal of reducing suffering for ourselves, our collaborators, and our users.\n\nFrom understanding customer pain points all the way down to the level of choosing variable names, applying practical compassion can help us craft better code, improve people's lives, and ultimately find more satisfaction in our work!",
                            "room": "Lovelace",
                            "date": "17/05/2019",
                            "time": "09:15 - 10:00",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Coffee break",
                            "type": "break",
                            "description": "",
                            "room": "Lovelace",
                            "date": "17/05/2019",
                            "time": "10:00 - 10:30",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "ScottWlachin",
                            "speakerName": "Scott Wlaschin",
                            "twitter": "https://twitter.com/ScottWlachin",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/ScottWlaschin.jpg",
                            "id": "nc19-swl01",
                            "title": "Four Languages from Forty Years Ago",
                            "type": "Talk",
                            "description": "The 1970's were a golden age for new programming languages, but do they have any relevance to programming today? Can we still learn from them? In this talk, we'll look at four languages designed over forty years ago -- SQL, Prolog, ML, and Smalltalk -- and discuss their philosophy and approach to programming, which is very different from most popular languages today. We'll come away with some practical design principles that are still applicable to modern development.",
                            "room": "Lovelace",
                            "date": "17/05/2019",
                            "time": "10:30 - 11:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "Abebab",
                            "speakerName": "Abeba Birhane",
                            "twitter": "https://twitter.com/Abebab",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/AbebaBirhane.jpg",
                            "id": "nc19-abi01",
                            "title": "",
                            "type": "Talk",
                            "description": "",
                            "room": "Lovelace",
                            "date": "17/05/2019",
                            "time": "11:30 - 12:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Lunch break",
                            "type": "lunch",
                            "description": "",
                            "room": "Lovelace",
                            "date": "17/05/2019",
                            "time": "12:15 - 14:00",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "tomaspetricek",
                            "speakerName": "Tomas Petricek",
                            "twitter": "https://twitter.com/tomaspetricek",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/TomasPetricek.jpg",
                            "id": "nc19-tpe01",
                            "title": "The Search for Fundamental Software Engineering Principles",
                            "type": "Talk",
                            "description": "Many fundamental ideas in theoretical computer science will still be true and important in 100 years. The halting problem will still be undecidable and appending to the end of a linked list will still have O(n) complexity. Finding similar fundamental ideas about software engineering is much harder. We will still have some development methodology, but it will likely differ from Waterfall or Agile. We will likely have some modelling tools, but they will likely not be based on UML, DDD or event sourcing. Are there any fundamental ideas about software engineering, or do we just keep re-inventing the wheel?\n\n\nI believe that fundamental principles of software engineering are of a very different kind than fundamental principles in theoretical computer science. Rather than alluding to mathematics, we need to critically reflect on the history. In this talk, we will look at past development methodologies, debates in the field and important milestones such as the 1968 NATO Conference on Software Engineering. I hope to convince you that critical reflection on those is a fundamental kind of knowledge about software engineering that will make you a better software engineer or craftsman and that will also be as relevant in 100 years as it is today.",
                            "room": "Lovelace",
                            "date": "17/05/2019",
                            "time": "14:00 - 14:45",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "marick",
                            "speakerName": "Brian Marick",
                            "twitter": "https://twitter.com/marick",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/BrianMarick.jpg",
                            "id": "nc19-bma01",
                            "title": "",
                            "type": "Talk",
                            "description": "",
                            "room": "Lovelace",
                            "date": "17/05/2019",
                            "time": "15:00 - 15:45",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "old_sound",
                            "speakerName": "Alvaro Videla",
                            "twitter": "https://twitter.com/old_sound",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/AlvaroVidela.jpg",
                            "id": "nc19-avi01",
                            "title": "Are Programming Languages Languages?",
                            "type": "Talk",
                            "description": "Since the early '50s we started talking about code as language. What does this metaphor implies? What are the similarities of programming languages with natural languages, and what are the differences between them? Do programming languages have the same cognitive influence in us, at the same level that natural languages are said to have?",
                            "room": "Lovelace",
                            "date": "17/05/2019",
                            "time": "16:00 - 16:45",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Coffee time",
                            "type": "break",
                            "description": "",
                            "room": "Lovelace",
                            "date": "17/05/2019",
                            "time": "16:45 - 17:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "ethicistforhire",
                            "speakerName": "Nolen Gertz",
                            "twitter": "https://twitter.com/ethicistforhire",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/NolenGertz.jpg",
                            "id": "nc19-nge01",
                            "title": "KEYNOTE : Nihilism and Technology",
                            "type": "Talk",
                            "description": "Rather than engage in endless debates about whether technologies are making us better or worse, Nolen Gertz investigates what we think \"better\" and \"worse\" mean, and what role this thinking has played in the creation of our technological world. Using Nietzsche's philosophy of nihilism, Gertz explores the ways in which our values mediate how we design and use technologies. Examining our technological practices—practices ranging from _Netflix and Chill_ to _Fitbit and Move_ to _Twitter and Rage_—reveals how nihilism and technologies have become intertwined, creating a world of techno-hypnosis, data-driven activity, pleasure economics, herd networking, and orgies of clicking.",
                            "room": "Lovelace",
                            "date": "17/05/2019",
                            "time": "17:15 - 18:00",
                            "tags": [],
                            "cospeakers": []
                        }
                    ]
                },
                {
                    "room": "Hopper",
                    "events": [{
                            "speakerId": "",
                            "speakerName": " ",
                            "id": "",
                            "type": "break",
                            "speakerPhoto": "",
                            "time": "8:30 - 9:00",
                            "title": "Check-in time",
                            "description": ""
                        },
                        {
                            "speakerId": "aprilwensel",
                            "speakerName": "April Wensel",
                            "twitter": "https://twitter.com/aprilwensel",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/AprilWensel.jpg",
                            "id": "nc19-awe01",
                            "title": "KEYNOTE : Crafting Compassionate Code",
                            "type": "Talk",
                            "description": "As developers, we might think we don't have to care about humans because we work on machines. However, nothing could be further from the truth. The only reason for us to build technology is to serve humans.\n\nTherefore, practicing compassion is essential for effective software development. Though many people think of compassion as something soft or ambiguous, you'll learn how compassion provides a practical framework for making rational decisions about our code with the goal of reducing suffering for ourselves, our collaborators, and our users.\n\nFrom understanding customer pain points all the way down to the level of choosing variable names, applying practical compassion can help us craft better code, improve people's lives, and ultimately find more satisfaction in our work!",
                            "room": "Lovelace",
                            "date": "17/05/2019",
                            "time": "09:15 - 10:00",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Coffee break",
                            "type": "break",
                            "description": "",
                            "room": "Hopper",
                            "date": "17/05/2019",
                            "time": "10:15 - 10:30",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "Heimeshoff",
                            "speakerName": "Marco Heimeshoff",
                            "twitter": "https://twitter.com/Heimeshoff",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/MarcoHeimeshoff.jpg",
                            "id": "nc19-mhe01",
                            "title": "Domain Driven UI",
                            "type": "Talk",
                            "description": "In this talk we are going to explore a bit of history of programming languages, trying to understand where the \"language\" motto comes from, and then move on to explore the Sapir-Whorf hypothesis to see what it means for natural languages, and try to understand if it applies–or not–to programming languages.",
                            "room": "Hopper",
                            "date": "17/05/2019",
                            "time": "10:30 - 11:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "EvelynvanKelle",
                            "speakerName": "Eveyln Van Kelle",
                            "twitter": "https://twitter.com/EvelynvanKelle",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/EvelynVanKelle.jpg",
                            "id": "nc19-eva01",
                            "title": "Socio-technical DDD - Essential social heuristics",
                            "type": "Talk",
                            "description": "Great teams build great products. But what makes a team ‘great’? We have a pretty good understanding of how to improve our code from a technical perspective, but how can we increase the effectiveness of the team creating that code and designs? In the end, software is a technical activity, created by human beings, so it’s crucial to understand the underlying social dynamics that affect our code and designs.\n\nWe should especially try to understand the social heuristics that we are using continuously to make sense of the world. In this talk, Evelyn van Kelle will discuss why we need a shared sense of reality and how this relates to team structure and the quality of your products. Second, she will explore two famous perspectives on sensemaking, and relate them to three social heuristics that are heavily affecting our products and decisions. \n\n- What you see is all there is (availability heuristic)\n- Beware of the experts (related to overconfidence)\n- The curse of first impressions (related to anchoring)\n\nThese heuristics have everything to do with tackling complexity at the heart of software development. In fact, they offer us ways to deal with the complexity we’re facing on a daily basis. If we know the domain, or ‘world’ that we’re operating in, and we are aware of heuristics that may affect our work, we can safely celebrate heuristics and make the best decisions of our lives. ",
                            "room": "Hopper",
                            "date": "17/05/2019",
                            "time": "11:30 - 12:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Lunch break",
                            "type": "lunch",
                            "description": "",
                            "room": "Hopper",
                            "date": "17/05/2019",
                            "time": "12:15 - 14:00",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "cyriux",
                            "speakerName": "Cyrille Martraire",
                            "twitter": "https://twitter.com/cyriux",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/CyrilleMartraire.jpg",
                            "id": "nc19-cma01",
                            "title": "Domain Modelling for Digital Transformations",
                            "type": "Talk",
                            "description": "As developers, we are often explained the business domain in a way that is corrupted by implementation concerns or past constraints. This is harmful. To achieve better domain models, we often have to reverse-engineer. Alternatively, we can also explore the domain from its first principles, which are the main concepts or assumptions that cannot be deduced from anything else.",
                            "room": "Hopper",
                            "date": "17/05/2019",
                            "time": "14:00 - 14:45",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "Indu_alagarsamy",
                            "speakerName": "Indu Alagarsamy",
                            "twitter": "https://twitter.com/Indu_alagarsamy",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/InduAlagarsamy.jpg",
                            "id": "nc19-ial01",
                            "title": "Evolving with the changing requirements - Using DDD and Saga Message Pattern",
                            "type": "Talk",
                            "description": "Modeling business requirements and policies is a tricky thing. Especially when those requirements just keep on changing. Sure, we've all written code before to model requirements, but how can we achieve the dream of evolving the code and at the same time be aligned with the business? After all, isn't that the promise of Domain Driven Design?\n\nBusiness policies are crucial and for us tech people, so is the right way to model them. We want our code to be extensible and to keep up with the changes in business. Time is also a crucial element in modeling business workflows and is implemented in a multitude of ways like timers, scheduled jobs, etc. In this talk, we'll discuss the saga message pattern to see how you can model complex business workflows, and model time as an immutable durable event so you can implement your business policies in such a manner that it truly evolves around your business. Realize the DDD dream.",
                            "room": "Hopper",
                            "date": "17/05/2019",
                            "time": "15:00 - 15:45",
                            "tags": [
                                "DDD",
                                "Patterns",
                                "Models"
                            ],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "kenny_baas",
                            "speakerName": "Kenny Baas-Schwegler",
                            "twitter": "https://twitter.com/kenny_baas",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/KennyBaas-Schwegler.jpg",
                            "id": "nc19-kba01",
                            "title": "I got Trapped! Systems thinking traps of IT Teams and how to battle them",
                            "type": "Talk",
                            "description": "Donella Meadows book, Thinking in Systems, is a concise and crucial book offering insight on how to think about systems, how to control systems and how systems change and control themselves. A system is a group of interacting, interrelated or interdependent parts unified to have a purpose. Examples can be a heating system, a tree, a human, a social system, an IT system, and IT Teams working as a part in a company which is also again a system.\n\nFor me, the most interesting part of the book is about system traps. They are traps in where systems can go wrong without noticing. Since reading the book I started observing these traps in my day to day work. Traps like seeking the wrong goal with a code coverage threshold, shifting the burden to an intervener by letting a separate QA team be responsible for quality. Join me in this talk where I will go into more of these system traps I observed in IT teams, and what I did to get out of these traps. ",
                            "room": "Hopper",
                            "date": "17/05/2019",
                            "time": "16:00 - 16:45",
                            "tags": [
                                "Systems thinking"
                            ],
                            "cospeakers": []
                        },
                        {
                            "type": "break",
                            "speakerPhoto": "",
                            "time": "16:45 - 17:15",
                            "title": "Coffee time",
                            "description": "",
                            "speakerName": ""
                        },
                        {
                            "speakerId": "ethicistforhire",
                            "speakerName": "Nolen Gertz",
                            "twitter": "https://twitter.com/ethicistforhire",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/NolenGertz.jpg",
                            "id": "nc19-nge01",
                            "title": "KEYNOTE : Nihilism and Technology",
                            "type": "Talk",
                            "description": "Rather than engage in endless debates about whether technologies are making us better or worse, Nolen Gertz investigates what we think \"better\" and \"worse\" mean, and what role this thinking has played in the creation of our technological world. Using Nietzsche's philosophy of nihilism, Gertz explores the ways in which our values mediate how we design and use technologies. Examining our technological practices—practices ranging from _Netflix and Chill_ to _Fitbit and Move_ to _Twitter and Rage_—reveals how nihilism and technologies have become intertwined, creating a world of techno-hypnosis, data-driven activity, pleasure economics, herd networking, and orgies of clicking.",
                            "room": "Hopper",
                            "date": "17/05/2019",
                            "time": "17:15 - 18:00",
                            "tags": [],
                            "cospeakers": []
                        }
                    ]
                },
                {
                    "room": "Liskov",
                    "events": [{
                            "type": "break",
                            "speakerPhoto": "",
                            "time": "8:30 - 9:00",
                            "title": "Check-in time",
                            "description": "",
                            "speakerName": ""
                        },
                        {
                            "speakerId": "aprilwensel",
                            "speakerName": "April Wensel",
                            "twitter": "https://twitter.com/aprilwensel",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/AprilWensel.jpg",
                            "id": "nc19-awe01",
                            "title": "KEYNOTE : Crafting Compassionate Code",
                            "type": "Talk",
                            "description": "As developers, we might think we don't have to care about humans because we work on machines. However, nothing could be further from the truth. The only reason for us to build technology is to serve humans.\n\nTherefore, practicing compassion is essential for effective software development. Though many people think of compassion as something soft or ambiguous, you'll learn how compassion provides a practical framework for making rational decisions about our code with the goal of reducing suffering for ourselves, our collaborators, and our users.\n\nFrom understanding customer pain points all the way down to the level of choosing variable names, applying practical compassion can help us craft better code, improve people's lives, and ultimately find more satisfaction in our work!",
                            "room": "Liskov",
                            "date": "17/05/2019",
                            "time": "09:15 - 10:00",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Coffee break",
                            "type": "break",
                            "description": "",
                            "room": "Liskov",
                            "date": "17/05/2019",
                            "time": "10:00 - 10:30",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "alex_schl",
                            "speakerName": "Alexandra Schladebeck",
                            "twitter": "https://twitter.com/alex_schl",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/AlexandraSchladebeck.jpg",
                            "id": "nc19-asc01",
                            "title": "Exploratory testing for everyone",
                            "type": "Talk",
                            "description": "Exploratory testing is one of the most important tools any project member can have. Any time we “check whether something works”, “test the bug fix” or “perform tests for a new feature”, we can (and should) use exploratory testing techniques.\n\nEven though the technique is so important, it is still misunderstood. It’s thought to be “clicking around” or “unstructured testing”. In this talk, we’ll demonstrate and explain what exploratory testing is and will also provide participants with reasons why they should be using it in their teams. We’ll provide analogies to other work we do in development teams (like debugging or identifying error causes) and look at how exploratory testing can be used beyond the UI.\n\nTo round off, we’ll give hints about where, how and when to use it in your process, be it agile or traditional or a mix of both.",
                            "room": "Liskov",
                            "date": "17/05/2019",
                            "time": "10:30 - 11:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "ThomasG_Tester",
                            "speakerName": "Thomas Garus",
                            "twitter": "https://twitter.com/ThomasG_Tester",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/ThomasGarus.jpg",
                            "id": "nc19-tga01",
                            "title": "Exploratory testing for everyone",
                            "type": "Talk",
                            "description": "Exploratory testing is one of the most important tools any project member can have. Any time we “check whether something works”, “test the bug fix” or “perform tests for a new feature”, we can (and should) use exploratory testing techniques.\n\nEven though the technique is so important, it is still misunderstood. It’s thought to be “clicking around” or “unstructured testing”. In this talk, we’ll demonstrate and explain what exploratory testing is and will also provide participants with reasons why they should be using it in their teams. We’ll provide analogies to other work we do in development teams (like debugging or identifying error causes) and look at how exploratory testing can be used beyond the UI.\n\nTo round off, we’ll give hints about where, how and when to use it in your process, be it agile or traditional or a mix of both.",
                            "room": "Liskov",
                            "date": "17/05/2019",
                            "time": "10:30 - 11:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "mathiasverraes",
                            "speakerName": "Mathias Verraes",
                            "twitter": "https://twitter.com/mathiasverraes",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/MathiasVerraes.jpg",
                            "id": "nc19-mve01",
                            "title": "Temporal Modelling",
                            "type": "Talk",
                            "description": "",
                            "room": "Liskov",
                            "date": "17/05/2019",
                            "time": "11:30 - 12:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Lunch break",
                            "type": "lunch",
                            "description": "",
                            "room": "Liskov",
                            "date": "17/05/2019",
                            "time": "12:15 - 14:00",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "NikkitaFTW",
                            "speakerName": "Sara Vieira",
                            "twitter": "https://twitter.com/NikkitaFTW",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/SaraVieira.jpg",
                            "id": "nc19-svi01",
                            "title": "Your Brain doesn't have a Fix Flag",
                            "type": "Talk",
                            "description": "Depression and anxiety are enormous problems in our work and world in general. But they are topics that are not discussed enough and topics that we feel are kind of shameful. In this talk Sara will expose her personal mental health issues that she had for a long time so you don’t ever feel embarrassed again. She will go through what she learned in this horrible horrible journey of putting a fix flag on her brain in the hope that it helps as many people as possible.",
                            "room": "Liskov",
                            "date": "17/05/2019",
                            "time": "14:00 - 14:45",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "twitter": "",
                            "speakerPhoto": "",
                            "id": "nc19-ape01",
                            "title": "",
                            "type": "Talk",
                            "description": "",
                            "room": "Liskov",
                            "date": "17/05/2019",
                            "time": "15:00 - 15:45",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "emilybache",
                            "speakerName": "Emily Bache",
                            "twitter": "https://twitter.com/emilybache",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/EmilyBache.jpg",
                            "id": "nc19-eba01",
                            "title": "Technical Leadership for Empowered Teams",
                            "type": "Talk",
                            "description": "As technical leaders we aim to help all the developers in our organizations to make better choices. How do we do that when empowered/Agile/DevOps teams make many choices independently? In this talk you will learn about a coaching technique for building up people, skills and teams.\n\nIn a DevOps world of Agile empowered teams, exerting technical leadership across an organization is challenging. When I was a junior to mid-level developer, the technical leaders in my organization were called Architects. Day to day, I saw little of them. The help they gave me comprised mainly of architectural diagrams to guide development work, and compulsory standard tools and frameworks. Occasionally they would hold workshops with the whole team and go through important technical decisions. These people, although once skilled programmers, did not write code themselves any more.\n\nMore recently, I've found DevOps to be a great way to get teams aligned with sensible shared goals, and to ensure they there is enough automation so there is time available for the important work of developing new features. I'm seeing a lot of people migrating to a microservices architecture, and gaining advantage from smaller, more manageable codebases. This is all good stuff. My biggest concerns now that I am a more senior developer and technical leader, is how to ensure the code produced is of good quality, has automated tests, and follows broad architectural guidelines. These concerns are similar to those of the past, but in my opinion the kind of technical leader we need today looks a lot more like a coach than a traditional architect.\n\nLately I have been using a coaching method that was originally developed by Llewellyn Falco. It involves first teaching each development team how to do mob programming. This is combined with a short daily training class teaching agile development techniques. Once each team has learnt mob programming, you can use this forum to coach them in their codebase. It's the most effective way I have found so far to teach a skill like Test-Driven Development. I believe you can also use this coaching method to encourage consistent use of other coding techniques, libraries and frameworks.\n\nIn this talk you will learn what Mob Programming is, what it is good for, and how I am using it. I hope hearing about my experiences will help you to add this coaching technique to your arsenal as a technical leader in a modern, Agile, DevOps organization.",
                            "room": "Liskov",
                            "date": "17/05/2019",
                            "time": "16:00 - 16:45",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "type": "break",
                            "speakerPhoto": "",
                            "time": "16:45 - 17:15",
                            "title": "Coffee time",
                            "description": "",
                            "speakerName": ""
                        },
                        {
                            "speakerId": "ethicistforhire",
                            "speakerName": "Nolen Gertz",
                            "twitter": "https://twitter.com/ethicistforhire",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/NolenGertz.jpg",
                            "id": "nc19-nge01",
                            "title": "KEYNOTE : Nihilism and Technology",
                            "type": "Talk",
                            "description": "Rather than engage in endless debates about whether technologies are making us better or worse, Nolen Gertz investigates what we think \"better\" and \"worse\" mean, and what role this thinking has played in the creation of our technological world. Using Nietzsche's philosophy of nihilism, Gertz explores the ways in which our values mediate how we design and use technologies. Examining our technological practices—practices ranging from _Netflix and Chill_ to _Fitbit and Move_ to _Twitter and Rage_—reveals how nihilism and technologies have become intertwined, creating a world of techno-hypnosis, data-driven activity, pleasure economics, herd networking, and orgies of clicking.",
                            "room": "Liskov",
                            "date": "17/05/2019",
                            "time": "17:15 - 18:00",
                            "tags": [],
                            "cospeakers": []
                        }
                    ]
                },
                {
                    "room": "Kare",
                    "events": [{
                            "type": "break",
                            "speakerPhoto": "",
                            "time": "8:30 - 9:00",
                            "title": "Check-in time",
                            "description": "",
                            "speakerName": ""
                        },
                        {
                            "speakerId": "aprilwensel",
                            "speakerName": "April Wensel",
                            "twitter": "https://twitter.com/aprilwensel",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/AprilWensel.jpg",
                            "id": "nc19-awe01",
                            "title": "KEYNOTE : Crafting Compassionate Code",
                            "type": "Talk",
                            "description": "As developers, we might think we don't have to care about humans because we work on machines. However, nothing could be further from the truth. The only reason for us to build technology is to serve humans.\n\nTherefore, practicing compassion is essential for effective software development. Though many people think of compassion as something soft or ambiguous, you'll learn how compassion provides a practical framework for making rational decisions about our code with the goal of reducing suffering for ourselves, our collaborators, and our users.\n\nFrom understanding customer pain points all the way down to the level of choosing variable names, applying practical compassion can help us craft better code, improve people's lives, and ultimately find more satisfaction in our work!",
                            "room": "Kare",
                            "date": "17/05/2019",
                            "time": "09:15 - 10:00",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Coffee break",
                            "type": "break",
                            "description": "",
                            "room": "Kare",
                            "date": "17/05/2019",
                            "time": "10:00 - 10:30",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "MaritvanDijk77",
                            "speakerName": "Marit van Dijk",
                            "twitter": "https://twitter.com/MaritvanDijk77",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/MaritvanDijk.jpg",
                            "id": "nc19-mva01",
                            "title": "Collaborating on Open Source Software; How I Started contributing to Open Source and Why You Should Too",
                            "type": "Talk",
                            "description": "There are several reasons you might want to contribute to open source software. For me, it was that I wanted to learn in a more useful way than doing programming challenges. So I looked into how I could contribute to open source projects that I use myself.\nAfter contributing for almost two years, I notice that I have learned a lot from my contributions (which has been useful at work), as well as have made friends and have become part of a community. \n\nIn this talk I will share my experience with contributing to Cucumber, including an early mistake (merging something that wasn't ready yet) and fixing it with the support of core contributors, and still feeling welcome!\nYou'll learn how how to find your project and contributions to start with, how to connect with the community to make sure your contributions are useful and the many types of contributions you can make. \n\nContributing to open source is a way of paying back to the community. In addition, it is a way for you to learn, collaborate and become part of a community. Getting (constructive) feedback on a pull request and collaborating to make things even better is a great feeling!",
                            "room": "Kare",
                            "date": "17/05/2019",
                            "time": "10:30 - 11:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "julienlavigne",
                            "speakerName": "Julien Lavigne du Cadet",
                            "twitter": "https://twitter.com/julienlavigne",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/JulienLavigneduCadet.jpg",
                            "id": "nc19-jla01",
                            "title": "Continuous reteaming: adopt self-selection and start moving people to the work!",
                            "type": "Talk",
                            "description": "What if your engineering teams didn't have to be static? What if you could form them, disband them or adapt their composition every 3 months? And people could pick what they work on?\n\nIs it a recipe for disaster? Or would it give you the flexibility to work on what has the highest business impact, increase engagement and develop your future leaders? What are the tradeoffs? How do you balance short term impact with long term ownership and platform stability?\n\nIn this talk, I'll tell you how I initially led a team of ~20 people from a static structure to something a lot more dynamic where reteaming happens quarterly, and how we are now scaling those practices to 60 people. I'll share with you:\n- How we plan our quarters and let people pick what they work on\n- How we create constraints to make sure the important work gets done while developing knowledge sharing\n- How we use OKRs to create alignment and track progress\n- How we keep in sync and engage with our stakeholders\n- How lead time is decreasing as a result\n\nI'll also share details on our journey: our mistakes, our learnings, what we still struggle with 1 year later and why we think this is strongly aligned with Agile core values!",
                            "room": "Kare",
                            "date": "17/05/2019",
                            "time": "11:30 - 12:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Lunch break",
                            "type": "lunch",
                            "description": "",
                            "room": "Kare",
                            "date": "17/05/2019",
                            "time": "12:15 - 14:00",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "FredericRivain",
                            "speakerName": "Frédéric Rivain",
                            "twitter": "https://twitter.com/FredericRivain",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/FredericRivain.jpg",
                            "id": "nc19-fri01",
                            "title": "From Feature Team to Mission Teams",
                            "type": "Lightning Talk",
                            "description": "How Dashlane decided to transform their Product & Engineering Agile Organization from feature teams to Mission teams to maximize product impact, focus and delivery. Learning what works and does not work with feature teams, we decided to evolve the concept to rally the team behind missions supported by OKRs, with a focused product vision and organization.",
                            "room": "Kare",
                            "date": "17/05/2019",
                            "time": "14:00 - 14:30",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "michelle_avomo",
                            "speakerName": "Michelle Avomo",
                            "twitter": "https://twitter.com/michelle_avomo",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/MichelleAvomo.jpg",
                            "id": "nc19-mav01",
                            "title": "(Quick) kata to explain D from SOLID principles",
                            "type": "Lightning Talk",
                            "description": "Understanding or explaining Dependency Inversion can be confusing. <br/>\n\nThe official definition of that principle gives no clue on how it works in real life. Thus, as dev we know it exists and yet, we hardly remember why it has been around for so long. <br/>\n\nThis session is about a kata that will help any developper seeing/showing Dependency Inversion Principle ( D from SOLID) in action.  <br/>\n\nThis session is a  straigthforward *tip and trick* to explain The D from SOLID.",
                            "room": "Kare",
                            "date": "17/05/2019",
                            "time": "14:30 - 15:00",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "pascallemerrer",
                            "speakerName": "Pascal Le Merrer",
                            "twitter": "https://twitter.com/pascallemerrer",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/PascalLeMerrer.jpg",
                            "id": "nc19-ple01",
                            "title": "Easy functional programming with elm",
                            "type": "Hands-on",
                            "description": "Do you want to produce front-end JS code that does not generate any errors at runtime?\n\nRefactor your Single Page Applications without introducing any bugs?\nA tooling as simple as it is efficient?\n\nDuring this workshop, discover elm, a functional language that highlights the developer experience!\n\nPrerequisites: install elm, elm-live and elm-format on your laptop.",
                            "room": "Kare",
                            "date": "17/05/2019",
                            "time": "15:30 - 16:30",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "type": "break",
                            "speakerPhoto": "",
                            "time": "16:45 - 17:15",
                            "title": "Coffee time",
                            "description": "",
                            "speakerName": ""
                        },
                        {
                            "speakerId": "ethicistforhire",
                            "speakerName": "Nolen Gertz",
                            "twitter": "https://twitter.com/ethicistforhire",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/NolenGertz.jpg",
                            "id": "nc19-nge01",
                            "title": "KEYNOTE : Nihilism and Technology",
                            "type": "Talk",
                            "description": "Rather than engage in endless debates about whether technologies are making us better or worse, Nolen Gertz investigates what we think \"better\" and \"worse\" mean, and what role this thinking has played in the creation of our technological world. Using Nietzsche's philosophy of nihilism, Gertz explores the ways in which our values mediate how we design and use technologies. Examining our technological practices—practices ranging from _Netflix and Chill_ to _Fitbit and Move_ to _Twitter and Rage_—reveals how nihilism and technologies have become intertwined, creating a world of techno-hypnosis, data-driven activity, pleasure economics, herd networking, and orgies of clicking.",
                            "room": "Kare",
                            "date": "17/05/2019",
                            "time": "17:15 - 18:00",
                            "tags": [],
                            "cospeakers": []
                        }
                    ]
                },
                {
                    "room": "Goldberg",
                    "events": [{
                            "type": "break",
                            "speakerPhoto": "",
                            "time": "8:30 - 9:00",
                            "title": "Check-in time",
                            "description": "",
                            "speakerName": ""
                        },
                        {
                            "speakerId": "aprilwensel",
                            "speakerName": "April Wensel",
                            "twitter": "https://twitter.com/aprilwensel",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/AprilWensel.jpg",
                            "id": "nc19-awe01",
                            "title": "KEYNOTE : Crafting Compassionate Code",
                            "type": "Talk",
                            "description": "As developers, we might think we don't have to care about humans because we work on machines. However, nothing could be further from the truth. The only reason for us to build technology is to serve humans.\n\nTherefore, practicing compassion is essential for effective software development. Though many people think of compassion as something soft or ambiguous, you'll learn how compassion provides a practical framework for making rational decisions about our code with the goal of reducing suffering for ourselves, our collaborators, and our users.\n\nFrom understanding customer pain points all the way down to the level of choosing variable names, applying practical compassion can help us craft better code, improve people's lives, and ultimately find more satisfaction in our work!",
                            "room": "Goldberg",
                            "date": "17/05/2019",
                            "time": "09:15 - 10:00",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Coffee break",
                            "type": "break",
                            "description": "",
                            "room": "Goldberg",
                            "date": "17/05/2019",
                            "time": "10:00 - 10:30",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "yot88",
                            "speakerName": "Yoan Thirion",
                            "twitter": "https://twitter.com/yot88",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/YoanThirion.jpg",
                            "id": "nc19-yth01",
                            "title": "Xtrem Reading - Read differently and cultivate your collective intelligence",
                            "type": "Hands-on",
                            "description": "Do you have any books that are dusty? \nDo you really want to read them but can't find the time? \nWe have a solution for you: \"Xtrem reading\".\n\nLearn group reading and read 2 books in 1 hour. \nOur promise to you:\n\n* Boost your collective intelligence\n* Rekindle the flame of reading\n* Plan your next readings\n* Don't read for nothing !",
                            "room": "Goldberg",
                            "date": "17/05/2019",
                            "time": "10:15 - 12:15",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "",
                            "speakerName": " ",
                            "speakerPhoto": "",
                            "id": "",
                            "title": "Lunch break",
                            "type": "lunch",
                            "description": "",
                            "room": "Goldberg",
                            "date": "17/05/2019",
                            "time": "12:15 - 13:45",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "speakerId": "sadraskol",
                            "speakerName": "Thomas Bracher",
                            "twitter": "https://twitter.com/sadraskol",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/ThomasBracher.jpg",
                            "id": "nc19-tbr01",
                            "title": "Let's discover event-based programming!",
                            "type": "Hands-on",
                            "description": "What's the best way to learn how to develop event driven application than participating to its live implementation?!\nThis session is a mix between an event storm and a live-coding conference to discover event driven programming. We will all design, discuss and decide how to solve a complex domain problem. Whatever your level in event driven systems, come to learn new things or teach others your knowledge.",
                            "room": "Goldberg",
                            "date": "17/05/2019",
                            "time": "13:45 - 15:45",
                            "tags": [],
                            "cospeakers": []
                        },
                        {
                            "type": "break",
                            "speakerPhoto": "",
                            "time": "16:45 - 17:15",
                            "title": "Coffee time",
                            "description": "",
                            "speakerName": ""
                        },
                        {
                            "speakerId": "ethicistforhire",
                            "speakerName": "Nolen Gertz",
                            "twitter": "https://twitter.com/ethicistforhire",
                            "speakerPhoto": "https://ncrafts.io/assets/img/speakers/NolenGertz.jpg",
                            "id": "nc19-nge01",
                            "title": "KEYNOTE : Nihilism and Technology",
                            "type": "Talk",
                            "description": "Rather than engage in endless debates about whether technologies are making us better or worse, Nolen Gertz investigates what we think \"better\" and \"worse\" mean, and what role this thinking has played in the creation of our technological world. Using Nietzsche's philosophy of nihilism, Gertz explores the ways in which our values mediate how we design and use technologies. Examining our technological practices—practices ranging from _Netflix and Chill_ to _Fitbit and Move_ to _Twitter and Rage_—reveals how nihilism and technologies have become intertwined, creating a world of techno-hypnosis, data-driven activity, pleasure economics, herd networking, and orgies of clicking.",
                            "room": "Kare",
                            "date": "17/05/2019",
                            "time": "17:15 - 18:00",
                            "tags": [],
                            "cospeakers": []
                        }
                    ]
                }
            ]
        }
    ]
}